---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: grafana
  namespace: observability
  labels:
    app.kubernetes.io/name: grafana
    app.kubernetes.io/component: dashboard
    app.kubernetes.io/part-of: observability
spec:
  replicas: 2
  selector:
    matchLabels:
      app.kubernetes.io/name: grafana
      app.kubernetes.io/component: dashboard
  template:
    metadata:
      labels:
        app.kubernetes.io/name: grafana
        app.kubernetes.io/component: dashboard
        app.kubernetes.io/part-of: observability
    spec:
      containers:
        - name: grafana
          image: grafana/grafana:10.0.1
          imagePullPolicy: IfNotPresent
          env:
            - name: GF_SECURITY_ADMIN_USER
              valueFrom:
                secretKeyRef:
                  name: grafana-admin
                  key: admin-user
            - name: GF_SECURITY_ADMIN_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: grafana-admin
                  key: admin-password
            - name: OPENSEARCH_USERNAME
              valueFrom:
                secretKeyRef:
                  name: grafana-admin
                  key: OPENSEARCH_USERNAME
            - name: OPENSEARCH_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: grafana-admin
                  key: OPENSEARCH_PASSWORD
            - name: GF_INSTALL_PLUGINS
              value: grafana-opensearch-datasource
          ports:
            - name: http
              containerPort: 3000
          livenessProbe:
            httpGet:
              path: /api/health
              port: http
            initialDelaySeconds: 30
            periodSeconds: 10
          readinessProbe:
            httpGet:
              path: /login
              port: http
            initialDelaySeconds: 10
            periodSeconds: 5
          resources:
            requests:
              cpu: "200m"
              memory: "256Mi"
            limits:
              cpu: "500m"
              memory: "1Gi"
          volumeMounts:
            - name: datasources
              mountPath: /etc/grafana/provisioning/datasources/datasources.yaml
              subPath: datasources.yaml
      volumes:
        - name: datasources
          configMap:
            name: grafana-datasources
