apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: kafka
  namespace: streaming
  labels:
    app.kubernetes.io/name: kafka
    app.kubernetes.io/component: broker
    app.kubernetes.io/part-of: kafka
spec:
  serviceName: kafka-headless
  replicas: 3
  selector:
    matchLabels:
      app.kubernetes.io/name: kafka
      app.kubernetes.io/component: broker
  template:
    metadata:
      labels:
        app.kubernetes.io/name: kafka
        app.kubernetes.io/component: broker
        app.kubernetes.io/part-of: kafka
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "9308"
    spec:
      terminationGracePeriodSeconds: 60
      containers:
        - name: kafka
          image: bitnami/kafka:3.5.0
          imagePullPolicy: IfNotPresent
          ports:
            - name: kafka-client
              containerPort: 9092
            - name: kafka-internal
              containerPort: 9093
          env:
            - name: KAFKA_CFG_ZOOKEEPER_CONNECT
              value: zookeeper.streaming.svc.cluster.local:2181
            - name: ALLOW_PLAINTEXT_LISTENER
              value: "yes"
            - name: KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP
              value: PLAINTEXT:PLAINTEXT,INTERNAL:PLAINTEXT
            - name: KAFKA_CFG_LISTENERS
              value: PLAINTEXT://:9092,INTERNAL://:9093
            - name: KAFKA_CFG_ADVERTISED_LISTENERS
              value: PLAINTEXT://kafka.streaming.svc.cluster.local:9092,INTERNAL://$(HOSTNAME).kafka-headless.streaming.svc.cluster.local:9093
            - name: KAFKA_CFG_INTER_BROKER_LISTENER_NAME
              value: INTERNAL
            - name: KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE
              value: "false"
            - name: KAFKA_HEAP_OPTS
              value: "-Xms512m -Xmx512m"
            - name: KAFKA_CFG_NUM_PARTITIONS
              value: "6"
            - name: KAFKA_CFG_DEFAULT_REPLICATION_FACTOR
              value: "3"
            - name: KAFKA_CFG_MIN_INSYNC_REPLICAS
              value: "2"
          readinessProbe:
            tcpSocket:
              port: kafka-client
            initialDelaySeconds: 30
            periodSeconds: 10
          livenessProbe:
            tcpSocket:
              port: kafka-client
            initialDelaySeconds: 60
            periodSeconds: 20
          resources:
            requests:
              cpu: "500m"
              memory: "1Gi"
            limits:
              cpu: "1"
              memory: "2Gi"
          volumeMounts:
            - name: data
              mountPath: /bitnami/kafka
        - name: jmx-exporter
          image: bitnami/jmx-exporter:0.18.0
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 9308
              name: metrics
          args:
            - "--config.file=/etc/jmx-exporter/config.yaml"
            - "--web.listen-address=:9308"
          volumeMounts:
            - name: jmx-config
              mountPath: /etc/jmx-exporter
      volumes:
        - name: jmx-config
          configMap:
            name: kafka-jmx-config
  volumeClaimTemplates:
    - metadata:
        name: data
      spec:
        accessModes: ["ReadWriteOnce"]
        resources:
          requests:
            storage: 100Gi
        storageClassName: fast
