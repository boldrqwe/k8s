apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: postgres-test-postgresql
  namespace: test
  labels:
    app.kubernetes.io/instance: postgres-test
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: postgresql
    app.kubernetes.io/version: 17.6.0
    helm.sh/chart: postgresql-16.7.27
    app.kubernetes.io/component: primary
spec:
  replicas: 1
  serviceName: postgres-test-postgresql-hl
  selector:
    matchLabels:
      app.kubernetes.io/instance: postgres-test
      app.kubernetes.io/name: postgresql
      app.kubernetes.io/component: primary
  updateStrategy:
    type: RollingUpdate
  template:
    metadata:
      name: postgres-test-postgresql
      labels:
        app.kubernetes.io/instance: postgres-test
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: postgresql
        app.kubernetes.io/version: 17.6.0
        helm.sh/chart: postgresql-16.7.27
        app.kubernetes.io/component: primary
    spec:
      serviceAccountName: postgres-test-postgresql
      securityContext:
        fsGroup: 1001
        runAsNonRoot: true
        runAsUser: 1001
        seccompProfile:
          type: RuntimeDefault
      containers:
        - name: postgresql
          image: docker.io/bitnami/postgresql:17.6.0-debian-12-r4
          imagePullPolicy: IfNotPresent
          ports:
            - name: tcp-postgresql
              containerPort: 5432
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop: ["ALL"]
            privileged: false
            runAsGroup: 1001
            runAsNonRoot: true
            runAsUser: 1001
            seccompProfile:
              type: RuntimeDefault
          resources:
            requests:
              cpu: 100m
              memory: 128Mi
            limits:
              cpu: 500m
              memory: 512Mi
          env:
            - name: BITNAMI_DEBUG
              value: "false"
            - name: POSTGRESQL_PORT_NUMBER
              value: "5432"
            - name: POSTGRESQL_VOLUME_DIR
              value: "/bitnami/postgresql"
            - name: PGDATA
              value: "/bitnami/postgresql/data"
            - name: POSTGRES_USER
              value: "app"
            - name: POSTGRES_DATABASE
              value: "appdb"
            - name: POSTGRES_PASSWORD_FILE
              value: /opt/bitnami/postgresql/secrets/password
            - name: POSTGRES_POSTGRES_PASSWORD_FILE
              value: /opt/bitnami/postgresql/secrets/postgres-password
          livenessProbe:
            exec:
              command: ["/bin/sh","-c","exec pg_isready -U app -d dbname=appdb -h 127.0.0.1 -p 5432"]
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 5
            failureThreshold: 6
          readinessProbe:
            exec:
              command:
                - /bin/sh
                - -c
                - exec pg_isready -U app -d dbname=appdb -h 127.0.0.1 -p 5432
            initialDelaySeconds: 5
            periodSeconds: 10
            timeoutSeconds: 5
            failureThreshold: 6
          volumeMounts:
            - name: postgresql-password
              mountPath: /opt/bitnami/postgresql/secrets/
            - name: data
              mountPath: /bitnami/postgresql
            - name: tmp
              mountPath: /tmp
            - name: app-tmp
              mountPath: /opt/bitnami/postgresql/tmp
            - name: dshm
              mountPath: /dev/shm
      volumes:
        - name: postgresql-password
          secret:
            secretName: app-postgres-test
        - name: tmp
          emptyDir: {}
        - name: app-tmp
          emptyDir: {}
        - name: dshm
          emptyDir:
            medium: Memory
  volumeClaimTemplates:
    - metadata:
        name: data
      spec:
        accessModes: ["ReadWriteOnce"]
        resources:
          requests:
            storage: "5Gi"
